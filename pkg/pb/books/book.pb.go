// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: pkg/pb/books/book.proto

package books

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Author string `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
}

func (x *Book) Reset() {
	*x = Book{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_books_book_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_books_book_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_pkg_pb_books_book_proto_rawDescGZIP(), []int{0}
}

func (x *Book) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Book) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Book) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

type BookQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Author string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
}

func (x *BookQuery) Reset() {
	*x = BookQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_books_book_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookQuery) ProtoMessage() {}

func (x *BookQuery) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_books_book_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookQuery.ProtoReflect.Descriptor instead.
func (*BookQuery) Descriptor() ([]byte, []int) {
	return file_pkg_pb_books_book_proto_rawDescGZIP(), []int{1}
}

func (x *BookQuery) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BookQuery) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

type BookCollectionQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author string `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
}

func (x *BookCollectionQuery) Reset() {
	*x = BookCollectionQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_books_book_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookCollectionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookCollectionQuery) ProtoMessage() {}

func (x *BookCollectionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_books_book_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookCollectionQuery.ProtoReflect.Descriptor instead.
func (*BookCollectionQuery) Descriptor() ([]byte, []int) {
	return file_pkg_pb_books_book_proto_rawDescGZIP(), []int{2}
}

func (x *BookCollectionQuery) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

var File_pkg_pb_books_book_proto protoreflect.FileDescriptor

var file_pkg_pb_books_book_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2f, 0x62,
	0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73,
	0x22, 0x44, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x33, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x22, 0x2d, 0x0a, 0x13, 0x42,
	0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x32, 0x9e, 0x01, 0x0a, 0x0b, 0x42,
	0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x10, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0b, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73,
	0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x6c, 0x6c, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x1a, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x1a, 0x0b, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x22, 0x00, 0x30, 0x01, 0x12, 0x25, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x12,
	0x0b, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x1a, 0x0b, 0x2e, 0x62,
	0x6f, 0x6f, 0x6b, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x3b, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_pb_books_book_proto_rawDescOnce sync.Once
	file_pkg_pb_books_book_proto_rawDescData = file_pkg_pb_books_book_proto_rawDesc
)

func file_pkg_pb_books_book_proto_rawDescGZIP() []byte {
	file_pkg_pb_books_book_proto_rawDescOnce.Do(func() {
		file_pkg_pb_books_book_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_pb_books_book_proto_rawDescData)
	})
	return file_pkg_pb_books_book_proto_rawDescData
}

var file_pkg_pb_books_book_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_pb_books_book_proto_goTypes = []interface{}{
	(*Book)(nil),                // 0: books.Book
	(*BookQuery)(nil),           // 1: books.BookQuery
	(*BookCollectionQuery)(nil), // 2: books.BookCollectionQuery
}
var file_pkg_pb_books_book_proto_depIdxs = []int32{
	1, // 0: books.BookService.FindBook:input_type -> books.BookQuery
	2, // 1: books.BookService.FindAllBooks:input_type -> books.BookCollectionQuery
	0, // 2: books.BookService.AddBook:input_type -> books.Book
	0, // 3: books.BookService.FindBook:output_type -> books.Book
	0, // 4: books.BookService.FindAllBooks:output_type -> books.Book
	0, // 5: books.BookService.AddBook:output_type -> books.Book
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_pb_books_book_proto_init() }
func file_pkg_pb_books_book_proto_init() {
	if File_pkg_pb_books_book_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_pb_books_book_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Book); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_books_book_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_books_book_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookCollectionQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_pb_books_book_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_books_book_proto_goTypes,
		DependencyIndexes: file_pkg_pb_books_book_proto_depIdxs,
		MessageInfos:      file_pkg_pb_books_book_proto_msgTypes,
	}.Build()
	File_pkg_pb_books_book_proto = out.File
	file_pkg_pb_books_book_proto_rawDesc = nil
	file_pkg_pb_books_book_proto_goTypes = nil
	file_pkg_pb_books_book_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BookServiceClient is the client API for BookService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookServiceClient interface {
	FindBook(ctx context.Context, in *BookQuery, opts ...grpc.CallOption) (*Book, error)
	FindAllBooks(ctx context.Context, in *BookCollectionQuery, opts ...grpc.CallOption) (BookService_FindAllBooksClient, error)
	AddBook(ctx context.Context, in *Book, opts ...grpc.CallOption) (*Book, error)
}

type bookServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBookServiceClient(cc grpc.ClientConnInterface) BookServiceClient {
	return &bookServiceClient{cc}
}

func (c *bookServiceClient) FindBook(ctx context.Context, in *BookQuery, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := c.cc.Invoke(ctx, "/books.BookService/FindBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookServiceClient) FindAllBooks(ctx context.Context, in *BookCollectionQuery, opts ...grpc.CallOption) (BookService_FindAllBooksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BookService_serviceDesc.Streams[0], "/books.BookService/FindAllBooks", opts...)
	if err != nil {
		return nil, err
	}
	x := &bookServiceFindAllBooksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BookService_FindAllBooksClient interface {
	Recv() (*Book, error)
	grpc.ClientStream
}

type bookServiceFindAllBooksClient struct {
	grpc.ClientStream
}

func (x *bookServiceFindAllBooksClient) Recv() (*Book, error) {
	m := new(Book)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bookServiceClient) AddBook(ctx context.Context, in *Book, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := c.cc.Invoke(ctx, "/books.BookService/AddBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookServiceServer is the server API for BookService service.
type BookServiceServer interface {
	FindBook(context.Context, *BookQuery) (*Book, error)
	FindAllBooks(*BookCollectionQuery, BookService_FindAllBooksServer) error
	AddBook(context.Context, *Book) (*Book, error)
}

// UnimplementedBookServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBookServiceServer struct {
}

func (*UnimplementedBookServiceServer) FindBook(context.Context, *BookQuery) (*Book, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindBook not implemented")
}
func (*UnimplementedBookServiceServer) FindAllBooks(*BookCollectionQuery, BookService_FindAllBooksServer) error {
	return status.Errorf(codes.Unimplemented, "method FindAllBooks not implemented")
}
func (*UnimplementedBookServiceServer) AddBook(context.Context, *Book) (*Book, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBook not implemented")
}

func RegisterBookServiceServer(s *grpc.Server, srv BookServiceServer) {
	s.RegisterService(&_BookService_serviceDesc, srv)
}

func _BookService_FindBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServiceServer).FindBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/books.BookService/FindBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServiceServer).FindBook(ctx, req.(*BookQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookService_FindAllBooks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BookCollectionQuery)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BookServiceServer).FindAllBooks(m, &bookServiceFindAllBooksServer{stream})
}

type BookService_FindAllBooksServer interface {
	Send(*Book) error
	grpc.ServerStream
}

type bookServiceFindAllBooksServer struct {
	grpc.ServerStream
}

func (x *bookServiceFindAllBooksServer) Send(m *Book) error {
	return x.ServerStream.SendMsg(m)
}

func _BookService_AddBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Book)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServiceServer).AddBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/books.BookService/AddBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServiceServer).AddBook(ctx, req.(*Book))
	}
	return interceptor(ctx, in, info, handler)
}

var _BookService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "books.BookService",
	HandlerType: (*BookServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindBook",
			Handler:    _BookService_FindBook_Handler,
		},
		{
			MethodName: "AddBook",
			Handler:    _BookService_AddBook_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FindAllBooks",
			Handler:       _BookService_FindAllBooks_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pkg/pb/books/book.proto",
}
